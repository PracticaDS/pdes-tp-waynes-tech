{"version":3,"sources":["components/images/delete.PNG","components/images/rotate.PNG","components/images/move.PNG","components/images/crafter.PNG","components/images/starter.PNG","components/images/furnace.PNG","components/images/seller.PNG","components/images/transporter.PNG","components/Celda.js","components/Fila.js","components/Fabrica.js","components/ButtonToolBox.js","components/ToolBox.js","containers/ContainerToolBox.js","actions/ButtonAction.js","components/InfoBox.js","components/App.js","constants.js","reducer/ButtonReducer.js","reducer/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Celda","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","className","Component","Fila","celdas","dibujarCeldas","i","columnas","push","Celda_Celda","fila","index","columna","Fabrica","grillas","dibujarGrilla","grilla","filas","Fila_Fila","defaultProps","getSelectStyle","press","ButtonToolBox","_ref","onClick","image","src","alt","ToolBox","botones","onButtonToolClick","components_ButtonToolBox","id","connector","connect","dispatch","type","selectButton","InfoBox","apply","arguments","App","ContainerToolBox","Fabrica_Fabrica","InfoBox_InfoBox","initialState","boton_start","boton_seller","boton_crafter","boton_furnace","boton_transporter","boton_borrar","boton_rotar","boton_move","length","undefined","action","map","t","objectSpread","combineReducers","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","trace","traceLimit","element","document","getElementById","Error","render","es","src_components_App"],"mappings":"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","file":"static/js/main.66dd0b23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.6e7a49f4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/rotate.d45efe18.PNG\";","module.exports = __webpack_public_path__ + \"static/media/move.cbfcb2fb.PNG\";","module.exports = __webpack_public_path__ + \"static/media/crafter.42bc2297.PNG\";","module.exports = __webpack_public_path__ + \"static/media/starter.8d09d4f3.PNG\";","module.exports = __webpack_public_path__ + \"static/media/furnace.617ec208.PNG\";","module.exports = __webpack_public_path__ + \"static/media/seller.3d538c9e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/transporter.0c46748f.PNG\";","import React, { Component } from 'react';\n//import { PropTypes } from 'prop-types';\nimport './Celda.css';\n\nexport class Celda extends Component {\n\n    constructor(props){\n        super (props);\n        this.state = {\n            \n        }\n    }\n\n    render () {\n        return (\n        <div className=\"celda\">\n            \n        </div>   \n        )\n    }\n\n}\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Celda } from './Celda';\nimport './Fila.css';\n\nexport class Fila extends Component {\n\n    constructor(props){\n        super (props);\n        this.state = {\n           celdas: []\n        }\n    }\n\n    render () {\n        return (\n        <div className=\"grilla\">\n           { this.dibujarCeldas() }\n        </div>   \n        )\n    }  \n\n    dibujarCeldas(){\n        var celdas = [];\n        for (var i=1; i<= this.props.columnas; i++){\n            celdas.push(\n                <Celda fila={this.props.index} columna={i} />\n            )\n        }\n        this.celdas= celdas;\n        return celdas;\n    }\n\n}\n\nFila.propTypes = {\n    index : PropTypes.number,\n    columnas: PropTypes.number\n}\n\n","import React, { Component } from 'react';\nimport './Fabrica.css';\nimport { PropTypes } from 'prop-types';\nimport { Fila } from './Fila'\n\nexport class Fabrica extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      grillas: []\n    }\n  }\n\n  render() {\n    \n    return (\n        <div className=\"grilla\">\n            {this.dibujarGrilla()}\n        </div>\n    )\n  }\n  \n  dibujarGrilla(){\n    var grilla = [];\n    for (var i = 1; i <= this.props.filas; i++) {\n      grilla.push(\n        <Fila index= {i} columnas= {this.props.columnas} />\n      );\n    }\n    this.grillas = grilla;\n    return grilla;\n  }\n\n}\n\nFabrica.propTypes = {\n  filas : PropTypes.number,\n  columnas: PropTypes.number\n}\n\nFabrica.defaultProps = { \n  filas : 6,\n  columnas: 8\n}","import type  { Image, Press }  from '../types/ButtonType';\nimport './ToolBox.css';\nimport React from 'react'\n\n\nconst getSelectStyle = (press: Press): string => {\n  switch (press) {\n    case 'selected':\n      return 'ButtonToolbox seleccionado';\n    case 'unselected':\n      return 'ButtonToolbox';\n    default:\n      return 'ButtonToolbox';\n  }\n};\n\nexport type Props = {\n  onClick: () => void,\n  press: Press,\n  image: Image\n};\n\nconst ButtonToolBox = ({ onClick, image, press }: Props) => (\n  <div className={getSelectStyle(press)} onClick={onClick}>\n    <img src={image} alt=\"tool\" />\n  </div>\n);\n\nexport default ButtonToolBox;\n\n/*\nimport React, { Component } from 'react';\nimport PropTypes            from 'prop-types';\n\nexport class ButtonToolBox extends Component {\n\n\n  render() {\n\t    if (this.props.seleccionado){\n          return <div className=\"ButtonToolbox seleccionado\" >\n                    <img src={this.props.src} alt=\"tool\" />\n                 </div>;\n      }else{\n          return <div className=\"ButtonToolbox\" onClick={() => this.props.onSelect(this.props.nombre) } >\n                    <img src={this.props.src} alt=\"tool\"/>\n                 </div>;\t\n      }\n  }\n}\n\n\nButtonToolBox.propTypes = {\n  seleccionado: PropTypes.bool,\n  nombre: PropTypes.string\n}\n*/","\nimport  ButtonToolBox     from './ButtonToolBox';\nimport type { Buttons, Id } from '../types/ButtonType';\nimport './ToolBox.css';\nimport React from 'react'\n\nexport type Props = {\n  botones: Buttons,\n  onButtonToolClick: (id: Id) => void\n};\n\n/*\nconst ToolBox = ({ botones, onButtonToolClick }: Props) => (\n  <div className=\"ToolBox\">\n    {\n      botones.map(boton => (\n        <ButtonToolBox\n          key={boton.id}\n          {...boton}\n          onClick={() => onButtonToolClick(boton.id)}\n        />\n      ))}\n  </div>\n); */\n\n\nexport const ToolBox = ({ botones, onButtonToolClick }: Props) => (\n  <div className=\"ToolBox\">\n    <h3>Máquinas</h3>\n     <table>\n       <tbody>\n         <tr>\n           <td>\n            <ButtonToolBox onClick={() => onButtonToolClick(botones[0].id)}\n                           image={botones[0].image} \n                           press={botones[0].press} />\n           </td>\n           <td>\n           <ButtonToolBox onClick={() => onButtonToolClick(botones[1].id)}\n                           image={botones[1].image} \n                           press={botones[1].press} />\n           </td>\n         </tr>\n         <tr>\n           <td>\n            <ButtonToolBox onClick={() => onButtonToolClick(botones[2].id)}\n                           image={botones[2].image} \n                           press={botones[2].press} />\n           </td>\n           <td>\n           <ButtonToolBox onClick={() => onButtonToolClick(botones[3].id)}\n                           image={botones[3].image} \n                           press={botones[3].press} />\n           </td>\n         </tr>\n         <tr>\n           <td>\n            <ButtonToolBox onClick={() => onButtonToolClick(botones[4].id)}\n                           image={botones[4].image} \n                           press={botones[4].press} />\n           </td>\n         </tr>\n       </tbody>\n     </table>\n    <h3>Edición</h3>\n     <table>\n       <tbody>\n         <tr>\n           <td>\n            <ButtonToolBox onClick={() => onButtonToolClick(botones[5].id)}\n                           image={botones[5].image} \n                           press={botones[5].press} />\n           </td>\n           <td>\n           <ButtonToolBox onClick={() => onButtonToolClick(botones[6].id)}\n                           image={botones[6].image} \n                           press={botones[6].press} />\n           </td>\n         </tr>\n         <tr>\n           <td>\n            <ButtonToolBox onClick={() => onButtonToolClick(botones[7].id)}\n                           image={botones[7].image} \n                           press={botones[7].press} />\n           </td>\n         </tr>\n       </tbody>\n     </table>\n  </div>\n);\n\n\nexport default ToolBox;","import { connect } from 'react-redux';\n\nimport { selectButton } from '../actions/ButtonAction';\nimport  ToolBox         from '../components/ToolBox';\n\nimport type { State, Dispatch } from '../types';\n\nexport const mapStateToProps = (state: State) => {\n    return {\n       botones: state.botones\n    };\n  };\n\n\nexport const mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onButtonToolClick: id => {\n            dispatch(selectButton(id));\n      }\n    };\n};\n  \nconst connector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n);\n  \nexport default connector(ToolBox);\n  ","import type { Id, ButtonAction } from '../types/ButtonType';\n\nexport const selectButton = (id: Id): ButtonAction => {\n  return {\n    type: 'SELECT',\n    id\n  };\n};\n","import React, { Component } from 'react';\nimport './InfoBox.css';\n\nexport class InfoBox extends Component {\n  \n  render() {\n    return (\n        <div className=\"Infobox\">\n            <h2>infobox </h2>\n        </div>\n    )\n  }\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport { Fabrica } from './Fabrica';\nimport  ToolBox    from '../containers/ContainerToolBox';\nimport { InfoBox } from './InfoBox';\n\nconst App = () => (\n  <div>\n     <div className=\"Container\">\n        <h1>Wayne's Tech</h1>\n        <div className=\"App\">  \n          <ToolBox/>\n          <Fabrica className=\"fabrica\" filas=\"10\" columnas=\"15\" />\n          <InfoBox />        \n        </div>\n      </div>\n  </div>\n);\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n","import boton_borrar      from './components/images/delete.PNG';\nimport boton_rotar       from './components/images/rotate.PNG';\nimport boton_move        from './components/images/move.PNG';\nimport boton_crafter     from './components/images/crafter.PNG';\nimport boton_start       from './components/images/starter.PNG';\nimport boton_furnace     from './components/images/furnace.PNG';\nimport boton_seller      from './components/images/seller.PNG';\nimport boton_transporter from './components/images/transporter.PNG';\n\nexport const initialState = {\n    botones: [\n        {image:boton_start,       press:\"unselected\", id:1},\n        {image:boton_seller,      press:\"unselected\", id:2},\n        {image:boton_crafter,     press:\"unselected\", id:3},\n        {image:boton_furnace,     press:\"unselected\", id:4},\n        {image:boton_transporter, press:\"unselected\", id:5},\n        {image:boton_borrar,      press:\"unselected\", id:6},\n        {image:boton_rotar,       press:\"unselected\", id:7},\n        {image:boton_move,        press:\"unselected\", id:8}\n    ]\n  };\n  ","\n import { Id, Buttons } from '../types/ButtonType';\n import type { Action } from '../types';\n\nconst selectButton = (botones: Buttons, id: Id): Buttons => {\n\n  return botones.map(t => (t.id !== id ? { ...t, press: 'unselected' } : { ...t, press: 'selected' }));\n\n};\n\n\nconst botones = (state: Buttons = [], action: Action): Buttons => {\n  switch (action.type) {\n    case '@@INIT':\n      return state;\n    case 'SELECT':\n      return selectButton(state, action.id);\n    default:\n      return state;\n  }\n};\n\nexport default botones;\n","import { combineReducers } from 'redux';\n\nimport botones from './ButtonReducer';\n\nexport default combineReducers({\n    botones // TODO: add more reducers here if needed\n});\n","// @flow\n\nimport React from 'react';\n//import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n//import * as serviceWorker from './serviceWorker';\n\n/*\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n*/\n\n\nimport { initialState } from './constants';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducer';\nimport type { Store } from './types';\n\nconst store: Store = createStore(\n  reducers,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({ trace: true, traceLimit: 25 })\n);\n\nconst element = document.getElementById('root');\nif (!element) {\n  throw new Error(\"couldn't find element with id root\");\n}\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  element\n);"],"sourceRoot":""}